<floating_menu>
  <c_button id="shareDialogBtn" class="menu-button" onclick={showShareDialog}>
    <div class="menu-button-content">
      <i class="fa-solid fa-share"></i>
      שתף
      </div> 
  </c_button>
  <c_button id="cakebtn" class="menu-button" onclick={(e) => dispatchEventName(e, 'cake')}>
    <div class="menu-button-content">
      <i class="fa-solid fa-cake-candles"></i>
      <span>הוסף נר</span>
    </div> 
  </c_button>

  <c_dialog if={state.isShareDialogVisible} onclose={hideShareDialog}>
    <div id="dialog-header" slot="header">
      שיתוף
    </div>

    <template slot="body">
      <p>שתף את העוגה עם חברים על מנת לשמח את בעל הברכה.</p>
      <p>{shareLink()}</p>

      <template if={state.GState.admin_pin.get()}>
        <p>שמור והשתמש בקישור זה על מנת לחזור לנהל את העוגה.</p>
        <p>{adminLink()}</p>
      </template>
    </template>

    <template slot="actions">
      <c_button id="1" onclick={copyShareLinkToClipboard}>העתק</c_button>
    </template>
  </c_dialog>


  <c_snackbar duration={3} if={state.isSnackbarVisible} onclose={hideSnacbkbar}>
    הקישור הועתק!
  </c_snackbar>

  <!-- style -->
  <style type="scss">
    :host {
      background: transparent;

      height: 60px;

      display: flex;
      flex-direction: row;
      gap: 0.25em;
    }
    

    .menu-button {
      box-shadow: 0 4px 30px rgba(0, 0, 0, 0.15);
      $blur-size: 15px;
      backdrop-filter: blur($blur-size);
      -webkit-backdrop-filter: blur($blur-size);

      .menu-button-content {
        display: flex;
        flex-direction: column;
        width: 48px;

        i {
          font-size: 2em;
        }
      }
    }


  </style>

  <script>
    import c_dialog from './dialog.riot';
    import c_button from './button.riot';
    import c_snackbar from './snackbar.riot';

    import State from '/services/state.js';

    export default { 
        onMounted() {
        },
        dispatchEventName(e, eventName) {
          console.log('menu', 'click', eventName);
          e.stopPropagation();
          this.root.dispatchEvent(new Event(eventName));
        },
        copyShareLinkToClipboard() {
          navigator.clipboard.writeText(this.shareLink());
          this.showSnacbkbar();
        },
        shareLink() {
          return `http://www.bday314.co.il/cake/${this.state.GState.cake_uuid.get()}`;
        },
        adminLink() {
          return this.shareLink() + `-${this.state.GState.admin_pin.get()}`;
        },
        showShareDialog(e) {
          this.update({isShareDialogVisible: true})
        },
        hideShareDialog(e) {
          this.update({isShareDialogVisible: false})
        },
        showSnacbkbar() {
            this.update({isSnackbarVisible: true})
        },
        hideSnacbkbar() {
            this.update({isSnackbarVisible: false})
        },
        components: {
          c_dialog,
          c_button,
          c_snackbar
        },
        state: {
          isShareDialogVisible: false,
          isSnackbarVisible: false,
          GState: State
        }
    }
  </script>
</floating_menu>

