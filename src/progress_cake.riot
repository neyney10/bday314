<progress_cake>
    <div id="layer-wrapper">
        <div class="layer w25">    
            <progress_bar value={state.progVals[3]} fillColor={state.fillColors[3]}></progress_bar>
        </div>
        <div class="layer w50">
            <progress_bar value={state.progVals[2]} fillColor={state.fillColors[2]}></progress_bar>
        </div>
        <div class="layer w75">
            <progress_bar value={state.progVals[1]} fillColor={state.fillColors[1]}></progress_bar>
        </div>
        <div class="layer w100">
            <progress_bar value={state.progVals[0]} fillColor={state.fillColors[0]}></progress_bar>
        </div>
    </div>


    <style type="scss">
        @use "animation";

        progress_bar {
            position: relative;
            background: #3F5EFB;
            background: radial-gradient(circle,rgba(63, 94, 251, 1) 0%, rgba(252, 70, 107, 1) 100%);
        }

        .active-progress-bar {
            #bar {
                animation: blink 0.75s ease-in-out 0s infinite alternate;
            }
        }

        #layer-wrapper {
            display: flex;
            flex-direction: column;
            gap: 8px;
            width: 100%;
            height: 88px;
            position: relative;
        }
        
        @keyframes slip {
            0% { bottom: 0; opacity: 0; width: 0%; filter: blur(5px); }
            100% { bottom: var(--endVal); opacity: 1; }
        }

        @keyframes blink {
            100% {
                filter: brightness(150%);
            }
        }

        .layer {
            border: 2px solid black;
            border-radius: 5px;
            margin: auto;
            height: 12px;
            overflow: clip;
            box-shadow: 5px 3px 5px 1px rgba(0,0,0,0.5);

            position: absolute;
            left: 50%;
            transform: translate(-50%,0);
        }


        .w25 {
            width: 25%;
            --endVal: 72px;
            @include animation.animate(slip, 0.4s, ease-in, 1);
            animation-fill-mode: forwards;
        }

        .w50 {
            width: 50%;
            --endVal: 48px;
            @include animation.animate(slip, 0.3s, ease-in, 1);
            animation-fill-mode: forwards;
        }

        .w75 {
            width: 75%;
            --endVal: 24px;
            @include animation.animate(slip, 0.2s, ease-in, 1);
            animation-fill-mode: forwards;
        }

        .w100 {
            width: 100%;
            --endVal: 0px;
            @include animation.animate(slip, 0.1s, ease-in, 1);
            animation-fill-mode: forwards;
        }
        
            
        


    </style>

    <script>
        import progress_bar from './progress_bar.riot';

        import { BehaviorSubject } from 'rxjs';


        export default { 
            onMounted(props, state) {
                state.activeProgBarDomEls = this.$$('progress_bar');

                props.value.subscribe((v) => {
                    const progCapacity = 100 / state.activeProgBarDomEls.length;
                    for (let i = 0; i < state.activeProgBarDomEls.length; i++)
                    {
                        if (v > i * progCapacity) 
                        {
                            state.progVals[i].next(Math.min(100*(v-(i*progCapacity)) / progCapacity, 100));
                            if (v <= (i+1) * progCapacity)
                            {
                                state.activeProgBarDomEls[state.activeProgBarDomEls.length-1-i].classList.add('active-progress-bar');
                            }
                            else
                            {
                                state.activeProgBarDomEls[state.activeProgBarDomEls.length-1-i].classList.remove('active-progress-bar');
                            }
                        }
                    }
                });

            },
            components: {
                progress_bar
            },
            state: {
                progVals: [new BehaviorSubject(), new BehaviorSubject(), new BehaviorSubject(), new BehaviorSubject()],
                layersDomEl: [],
                activeProgBarDomEls: [],
                fillColors: [
                    "linear-gradient(90deg,rgba(213, 70, 252, 1) 0%, rgba(252, 70, 107, 1) 100%)",
                    "linear-gradient(90deg,rgba(252, 70, 107, 1) 0%, rgba(252, 70, 237, 1) 100%)",
                    "linear-gradient(90deg,rgba(252, 70, 237, 1) 0%, rgba(112, 70, 252, 1) 100%)",
                    "linear-gradient(90deg,rgba(112, 70, 252, 1) 0%, rgba(70, 176, 252, 1) 100%)"

                ]
            },
        }
    </script>

</progress_cake>